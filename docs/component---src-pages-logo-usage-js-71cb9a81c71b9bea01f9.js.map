{"version":3,"sources":["webpack:///./src/components/style-display-text.js","webpack:///./src/pages/logo-usage.js","webpack:///./src/components/example-text-block.js"],"names":["StyleDisplayText","children","className","Logo","level","variantName","title","subtitle","display","src","resolvePath","size","unit","color","ExampleTextBlock","styleName","fontMetrics","getCssFontMetrics","console","log","fontSize","lineHeight","topMargin","bottomMargin"],"mappings":"2FAAA,mCAOeA,IAJU,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvB,uBAAGC,UAAU,sBAAsBD,K,kCCJrC,0NAkGeE,UAhFF,WACX,OACE,kBAAC,IAAD,KACE,6BAASD,UAAU,sBACjB,4BAAQA,UAAU,gBAChB,kBAAC,IAAD,CAASE,MAAO,GAAhB,yBAGF,iCACE,kBAAC,IAAD,CAAQC,YAAY,UACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,mBACNC,SAAS,qDAEX,yBAAKL,UAAU,+BACb,kBAAC,IAAD,CAAqBM,QAAQ,SAC3B,yBAAKN,UAAU,uBACb,yBACEA,UAAU,4BACVO,IAAKC,YACH,iDAGJ,yBAAKR,UAAU,mCACb,kBAAC,IAAD,CAAYS,KAAK,KAAKC,KAAK,aAOvC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEN,MAAM,qBACNC,SAAS,qDAEX,yBAAKL,UAAU,+BACb,kBAAC,IAAD,CAAqBM,QAAQ,SAC3B,yBAAKN,UAAU,uBACb,yBACEA,UAAU,iCACVO,IAAKC,YACH,4CAGJ,yBAAKR,UAAU,mCACb,kBAAC,IAAD,CAAYS,KAAK,KAAKC,KAAK,aAOvC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEN,MAAM,+BACNC,SAAS,4FAEX,yBAAKL,UAAU,+BACb,kBAAC,IAAD,KACE,yBAAKA,UAAU,gDACb,kBAAC,IAAD,CAAeW,MAAM,UACrB,yBAAKX,UAAU,mCACb,kBAAC,IAAD,CAAYS,KAAK,KAAKC,KAAK,kB,kCCrFjD,6DA6BeE,IAtBU,SAAC,GAKnB,IAJLC,EAII,EAJJA,UACAV,EAGI,EAHJA,YAEAJ,GACI,EAFJC,UAEI,EADJD,UAEMe,EAAcC,YAAkBF,EAAWV,GAGjD,OADAa,QAAQC,IAAI,cAAeJ,EAAWC,GAEpC,kBAAC,IAAD,CACEI,SAAUJ,EAAYL,KACtBU,WAAYL,EAAYK,WACxBT,KAAMI,EAAYJ,KAClBU,UAAWN,EAAYM,UACvBC,aAAcP,EAAYO,cAEzBtB","file":"component---src-pages-logo-usage-js-71cb9a81c71b9bea01f9.js","sourcesContent":["import \"./style-display-text.css\"\nimport React from \"react\"\n\nconst StyleDisplayText = ({ children }) => (\n  <p className=\"style-display-text\">{children}</p>\n)\n\nexport default StyleDisplayText\n","import \"./logo-usage.css\"\nimport React, { useRef } from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport { LoremIpsum } from \"lorem-ipsum\"\nimport resolvePath from \"../utils/resolve-path\"\nimport Layout from \"../components/layout\"\nimport StyleHx from \"../components/style-hx\"\nimport ExampleRow from \"../components/example-row\"\nimport ExampleGroup from \"../components/example-group\"\nimport ExampleLabel from \"../components/example-label\"\nimport ExampleHx from \"../components/example-hx\"\nimport ExampleTextBlock from \"../components/example-text-block\"\nimport RevealBoxWhiteSpace from \"../components/reveal-box-white-space\"\nimport StyleP from \"../components/style-p\"\nimport StyleDisplayText from \"../components/style-display-text\"\nimport { VDimension } from \"../components/dimensions\"\nimport PrereviewLogo from \"../components/prereview-logo\"\n\nconst Logo = () => {\n  return (\n    <Layout>\n      <article className=\"page page--headers\">\n        <header className=\"page__header\">\n          <StyleHx level={1}>PREreview Logo Usage</StyleHx>\n        </header>\n\n        <section>\n          <StyleP variantName=\"large\"></StyleP>\n          <ExampleGroup>\n            <ExampleRow>\n              <ExampleLabel\n                title=\"Wide Header Logo\"\n                subtitle=\"When space permits, the full logo should be used\"\n              />\n              <div className=\"logo-usage__nav-bar-example\">\n                <RevealBoxWhiteSpace display=\"block\">\n                  <div className=\"logo-usage__nav-bar\">\n                    <img\n                      className=\"logo-usage__nav-bar__logo\"\n                      src={resolvePath(\n                        \"/images/prereview_logo_h_colour_cropped.svg\"\n                      )}\n                    />\n                    <div className=\"logo-usage__nav-bar__logo_v-dim\">\n                      <VDimension size=\"48\" unit=\"px\" />\n                    </div>\n                  </div>\n                </RevealBoxWhiteSpace>\n              </div>\n            </ExampleRow>\n          </ExampleGroup>\n          <ExampleGroup>\n            <ExampleRow>\n              <ExampleLabel\n                title=\"Narrow Header Logo\"\n                subtitle=\"On narrow screen, the icon-only logo may be used\"\n              />\n              <div className=\"logo-usage__nav-bar-example\">\n                <RevealBoxWhiteSpace display=\"block\">\n                  <div className=\"logo-usage__nav-bar\">\n                    <img\n                      className=\"logo-usage__nav-bar__icon-logo\"\n                      src={resolvePath(\n                        \"/images/prereview_logo_icon_colour.svg\"\n                      )}\n                    />\n                    <div className=\"logo-usage__nav-bar__logo_v-dim\">\n                      <VDimension size=\"48\" unit=\"px\" />\n                    </div>\n                  </div>\n                </RevealBoxWhiteSpace>\n              </div>\n            </ExampleRow>\n          </ExampleGroup>\n          <ExampleGroup>\n            <ExampleRow>\n              <ExampleLabel\n                title=\"White Logo On Red Background\"\n                subtitle=\"A white variant of the logo is available for placement on the red PREreview Brand Color\"\n              />\n              <div className=\"logo-usage__nav-bar-example\">\n                <RevealBoxWhiteSpace>\n                  <div className=\"logo-usage__nav-bar logo-usage__nav-bar--red\">\n                    <PrereviewLogo color=\"white\" />\n                    <div className=\"logo-usage__nav-bar__logo_v-dim\">\n                      <VDimension size=\"48\" unit=\"px\" />\n                    </div>\n                  </div>\n                </RevealBoxWhiteSpace>\n              </div>\n            </ExampleRow>\n          </ExampleGroup>\n        </section>\n      </article>\n    </Layout>\n  )\n}\n\nexport default Logo\n","import React from \"react\"\nimport { getCssVariable, getCssFontMetrics } from \"../utils/get-css-variable\"\nimport StyleHx from \"./style-hx\"\nimport RevealTypeWhiteSpace from \"./reveal-type-white-space\"\n\n/* the semantic level and visual size can be set independantly */\n\nconst ExampleTextBlock = ({\n  styleName,\n  variantName,\n  className = \"\",\n  children,\n}) => {\n  const fontMetrics = getCssFontMetrics(styleName, variantName)\n\n  console.log(\"fontMetrics\", styleName, fontMetrics)\n  return (\n    <RevealTypeWhiteSpace\n      fontSize={fontMetrics.size}\n      lineHeight={fontMetrics.lineHeight}\n      unit={fontMetrics.unit}\n      topMargin={fontMetrics.topMargin}\n      bottomMargin={fontMetrics.bottomMargin}\n    >\n      {children}\n    </RevealTypeWhiteSpace>\n  )\n}\n\nexport default ExampleTextBlock\n"],"sourceRoot":""}