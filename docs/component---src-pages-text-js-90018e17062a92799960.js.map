{"version":3,"sources":["webpack:///./src/components/style-display-text.js","webpack:///./src/components/example-text-block.js","webpack:///./src/pages/text.js"],"names":["StyleDisplayText","children","className","ExampleTextBlock","styleName","variantName","fontMetrics","getCssFontMetrics","console","log","fontSize","size","lineHeight","unit","topMargin","bottomMargin","Text","titleGenerator","LoremIpsum","wordsPerSentence","max","min","textGenerator","sentencesPerParagraph","shortTextGenerator","level","title","subtitle","generateSentences","generateParagraphs"],"mappings":"2FAAA,mCAOeA,IAJU,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvB,uBAAGC,UAAU,sBAAsBD,K,kCCJrC,6DA6BeE,IAtBU,SAAC,GAKnB,IAJLC,EAII,EAJJA,UACAC,EAGI,EAHJA,YAEAJ,GACI,EAFJC,UAEI,EADJD,UAEMK,EAAcC,YAAkBH,EAAWC,GAGjD,OADAG,QAAQC,IAAI,cAAeL,EAAWE,GAEpC,kBAAC,IAAD,CACEI,SAAUJ,EAAYK,KACtBC,WAAYN,EAAYM,WACxBC,KAAMP,EAAYO,KAClBC,UAAWR,EAAYQ,UACvBC,aAAcT,EAAYS,cAEzBd,K,kCCxBP,wJAkHee,UArGF,WACX,IAAMC,EAAiB,IAAIC,aAAW,CACpCC,iBAAkB,CAChBC,IAAK,EACLC,IAAK,KAIHC,EAAgB,IAAIJ,aAAW,CACnCK,sBAAuB,CACrBH,IAAK,GACLC,IAAK,KAIHG,EAAqB,IAAIN,aAAW,CACxCK,sBAAuB,CACrBH,IAAK,EACLC,IAAK,KAIT,OACE,kBAAC,IAAD,KACE,6BAASnB,UAAU,sBACjB,4BAAQA,UAAU,gBAChB,kBAAC,IAAD,CAASuB,MAAO,GAAhB,2BAGF,iCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,YACNC,SAAS,+BAGX,kBAAC,IAAD,CAAWF,MAAO,EAAGrB,UAAU,YAC5Ba,EAAeW,kBAAkB,KAGtC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEF,MAAM,YACNC,SAAS,+BAGX,kBAAC,IAAD,CAAkBvB,UAAU,QAAQC,YAAY,SAC9C,kBAAC,IAAD,CAAQA,YAAY,SACjBmB,EAAmBK,mBAAmB,MAI7C,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEH,MAAM,YACNC,SAAS,+BAEX,6BACE,kBAAC,IAAD,CAAkBvB,UAAU,SAC1B,kBAAC,IAAD,KAASkB,EAAcO,mBAAmB,KAE5C,kBAAC,IAAD,CAAkBzB,UAAU,SAC1B,kBAAC,IAAD,KAASkB,EAAcO,mBAAmB,OAIhD,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEH,MAAM,eACNC,SAAS,+BAEX,6BACE,kBAAC,IAAD,CAAkBvB,UAAU,aAC1B,kBAAC,IAAD,KACGa,EAAeW,kBAAkB,KAGtC,kBAAC,IAAD,CAAkBxB,UAAU,SAC1B,kBAAC,IAAD,KAASkB,EAAcO,mBAAmB,OAIhD,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEH,MAAM,aACNC,SAAS,+BAEX,6BACE,kBAAC,IAAD,CAAkBvB,UAAU,QAAQC,YAAY,SAC9C,kBAAC,IAAD,CAAQA,YAAY,SACjBiB,EAAcO,mBAAmB","file":"component---src-pages-text-js-90018e17062a92799960.js","sourcesContent":["import \"./style-display-text.css\"\nimport React from \"react\"\n\nconst StyleDisplayText = ({ children }) => (\n  <p className=\"style-display-text\">{children}</p>\n)\n\nexport default StyleDisplayText\n","import React from \"react\"\nimport { getCssVariable, getCssFontMetrics } from \"../utils/get-css-variable\"\nimport StyleHx from \"./style-hx\"\nimport RevealTypeWhiteSpace from \"./reveal-type-white-space\"\n\n/* the semantic level and visual size can be set independantly */\n\nconst ExampleTextBlock = ({\n  styleName,\n  variantName,\n  className = \"\",\n  children,\n}) => {\n  const fontMetrics = getCssFontMetrics(styleName, variantName)\n\n  console.log(\"fontMetrics\", styleName, fontMetrics)\n  return (\n    <RevealTypeWhiteSpace\n      fontSize={fontMetrics.size}\n      lineHeight={fontMetrics.lineHeight}\n      unit={fontMetrics.unit}\n      topMargin={fontMetrics.topMargin}\n      bottomMargin={fontMetrics.bottomMargin}\n    >\n      {children}\n    </RevealTypeWhiteSpace>\n  )\n}\n\nexport default ExampleTextBlock\n","import React from \"react\"\nimport { LoremIpsum } from \"lorem-ipsum\"\n\nimport Layout from \"../components/layout\"\nimport StyleHx from \"../components/style-hx\"\nimport ExampleRow from \"../components/example-row\"\nimport ExampleLabel from \"../components/example-label\"\nimport ExampleHx from \"../components/example-hx\"\nimport ExampleTextBlock from \"../components/example-text-block\"\nimport RevealBoxWhiteSpace from \"../components/reveal-box-white-space\"\nimport StyleP from \"../components/style-p\"\nimport StyleDisplayText from \"../components/style-display-text\"\n\nconst Text = () => {\n  const titleGenerator = new LoremIpsum({\n    wordsPerSentence: {\n      max: 8,\n      min: 4,\n    },\n  })\n\n  const textGenerator = new LoremIpsum({\n    sentencesPerParagraph: {\n      max: 12,\n      min: 6,\n    },\n  })\n\n  const shortTextGenerator = new LoremIpsum({\n    sentencesPerParagraph: {\n      max: 8,\n      min: 4,\n    },\n  })\n\n  return (\n    <Layout>\n      <article className=\"page page--headers\">\n        <header className=\"page__header\">\n          <StyleHx level={1}>Styling Bodies of text</StyleHx>\n        </header>\n\n        <section>\n          <ExampleRow>\n            <ExampleLabel\n              title=\"Heading 1\"\n              subtitle=\"Open Sans 600, 24pt / 32pt\"\n            />\n\n            <ExampleHx level={1} styleName=\"header-1\">\n              {titleGenerator.generateSentences(1)}\n            </ExampleHx>\n          </ExampleRow>\n          <ExampleRow>\n            <ExampleLabel\n              title=\"Lead Text\"\n              subtitle=\"Open Sans 500, 13pt / 22pt\"\n            />\n\n            <ExampleTextBlock styleName=\"basic\" variantName=\"large\">\n              <StyleP variantName=\"large\">\n                {shortTextGenerator.generateParagraphs(1)}\n              </StyleP>\n            </ExampleTextBlock>\n          </ExampleRow>\n          <ExampleRow>\n            <ExampleLabel\n              title=\"Body Text\"\n              subtitle=\"Open Sans 400, 11pt / 18pt\"\n            />\n            <div>\n              <ExampleTextBlock styleName=\"basic\">\n                <StyleP>{textGenerator.generateParagraphs(1)}</StyleP>\n              </ExampleTextBlock>\n              <ExampleTextBlock styleName=\"basic\">\n                <StyleP>{textGenerator.generateParagraphs(1)}</StyleP>\n              </ExampleTextBlock>\n            </div>\n          </ExampleRow>\n          <ExampleRow>\n            <ExampleLabel\n              title=\"Display Text\"\n              subtitle=\"Open Sans 300, 32pt / 40pt\"\n            />\n            <div>\n              <ExampleTextBlock styleName=\"display-1\">\n                <StyleDisplayText>\n                  {titleGenerator.generateSentences(2)}\n                </StyleDisplayText>\n              </ExampleTextBlock>\n              <ExampleTextBlock styleName=\"basic\">\n                <StyleP>{textGenerator.generateParagraphs(1)}</StyleP>\n              </ExampleTextBlock>\n            </div>\n          </ExampleRow>\n          <ExampleRow>\n            <ExampleLabel\n              title=\"Small Text\"\n              subtitle=\"Open Sans 400, 10pt / 15pt\"\n            />\n            <div>\n              <ExampleTextBlock styleName=\"basic\" variantName=\"small\">\n                <StyleP variantName=\"small\">\n                  {textGenerator.generateParagraphs(1)}\n                </StyleP>\n              </ExampleTextBlock>\n            </div>\n          </ExampleRow>\n        </section>\n      </article>\n    </Layout>\n  )\n}\n\nexport default Text\n"],"sourceRoot":""}