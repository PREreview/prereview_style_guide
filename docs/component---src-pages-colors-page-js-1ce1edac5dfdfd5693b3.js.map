{"version":3,"sources":["webpack:///./src/components/example-search-input.js","webpack:///./node_modules/@reach/observe-rect/dist/index.m.js","webpack:///./node_modules/@reach/rect/es/index.js","webpack:///./src/components/reveal-break-points.js","webpack:///./src/pages/colors-page.js","webpack:///./src/components/break-points.js"],"names":["ExampleSearchInput","children","size","className","display","type","placeholder","t","n","_n","e","some","o","i","observe","r","u","getBoundingClientRect","requestAnimationFrame","unobserve","cancelAnimationFrame","Rect","_ref","onChange","_ref$observe","ref","useRef","rect","useRect","nodeRef","_useState","setRect","observerRef","cleanup","current","console","warn","displayName","RevealBreakPoints","myRef","breakPoints","map","breakPoint","key","style","width","maxWidth","name","ColorsPage","renderSwatch","colorName","colorVarName","colorValue","getCssVariable","background","level","variantName","title","subtitle","color","href","minWidth","useBreakPoints","baseClass","useState","activeBreakPoints","setActiveBreakPoints","setIsLoaded","useEffect","matchingBreakPoints","filter","matchingBreakPoint","getBreakPointClasses","activeBreakPoint","join"],"mappings":"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","file":"component---src-pages-colors-page-js-1ce1edac5dfdfd5693b3.js","sourcesContent":["import \"./example-search-input.css\"\nimport React, { useRef } from \"react\"\nimport RevealBoxWhiteSpace from \"./reveal-box-white-space\"\nimport PrereviewLogo from \"./prereview-logo\"\nimport { useBreakPoints, getBreakPointClasses } from \"./break-points\"\nimport Rect, { useRect } from \"@reach/rect\"\nimport RevealBreakPoints from \"./reveal-break-points\"\n\nconst ExampleSearchInput = ({ children, size = \"large\" }) => {\n  // const navBarRef = useRef()\n\n  // const breakPoints = useBreakPoints(navBarRef, \"example-search-input\")\n  // const breakPointClasses = getBreakPointClasses(breakPoints, \"example-search-input\")\n\n  return (\n    <RevealBoxWhiteSpace\n      className={`example-search-input-container`}\n      display=\"block\"\n    >\n      <div className={`example-search-input  example-search-input--${size}`}>\n        <input\n          className=\"example-search-input__input\"\n          type=\"text\"\n          placeholder=\"Search by title, DOI, author, etc...\"\n        />\n      </div>\n    </RevealBoxWhiteSpace>\n  )\n}\n\nexport default ExampleSearchInput\n","import \"core-js/modules/es6.array.some\";\n\nvar t = [\"width\", \"height\", \"top\", \"right\", \"bottom\", \"left\"],\n    n = function n(_n, e) {\n  return void 0 === _n && (_n = {}), void 0 === e && (e = {}), t.some(function (t) {\n    return _n[t] !== e[t];\n  });\n};\n\nexport default function (t, e) {\n  var o,\n      i,\n      r = function r() {\n    var u = t.getBoundingClientRect();\n    n(u, o) && e(o = u), i = requestAnimationFrame(r);\n  };\n\n  return {\n    observe: r,\n    unobserve: function unobserve() {\n      cancelAnimationFrame(i);\n    }\n  };\n}\n;","import React, { useRef, useState, useLayoutEffect } from \"react\";\nimport observeRect from \"@reach/observe-rect\";\nimport PropTypes from \"prop-types\"; ////////////////////////////////////////////////////////////////////////////////\n// Rect\n\nexport function Rect(_ref) {\n  var onChange = _ref.onChange,\n      _ref$observe = _ref.observe,\n      observe = _ref$observe === void 0 ? true : _ref$observe,\n      children = _ref.children;\n  var ref = React.useRef(null);\n  var rect = useRect(ref, observe, onChange);\n  return children({\n    ref: ref,\n    rect: rect\n  });\n}\nRect.displayName = \"Rect\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  Rect.propTypes = {\n    children: PropTypes.func,\n    observe: PropTypes.bool,\n    onChange: PropTypes.func\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n// useRect\n\n\nexport function useRect(nodeRef, observe, onChange) {\n  if (observe === void 0) {\n    observe = true;\n  }\n\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  var observerRef = useRef(null);\n  useLayoutEffect(function () {\n    var cleanup = function cleanup() {\n      observerRef.current && observerRef.current.unobserve();\n    };\n\n    if (!nodeRef.current) {\n      console.warn(\"You need to place the ref\");\n      return cleanup;\n    }\n\n    if (!observerRef.current && nodeRef.current) {\n      observerRef.current = observeRect(nodeRef.current, function (rect) {\n        onChange && onChange(rect);\n        setRect(rect);\n      });\n    }\n\n    observe && observerRef.current.observe();\n    return cleanup; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [observe, onChange]);\n  return rect;\n}\nexport default Rect;","import \"./reveal-break-points.css\"\nimport React, { useRef } from \"react\"\nimport { breakPoints, getBreakPointClasses } from \"./break-points\"\n\nconst RevealBreakPoints = () => {\n  const myRef = useRef()\n  const allBreakPoints = breakPoints\n  // const activeBreakPoints = useBreakPoints(myRef, \"reveal-break-points__break\")\n  //const breakPointClasses = getBreakPointClasses(breakPoints)\n\n  return (\n    <div className=\"reveal-break-points\" ref={myRef}>\n      {breakPoints.map((breakPoint, i) => (\n        <div\n          key={i}\n          style={{\n            width: `${breakPoint.maxWidth}px`,\n          }}\n          className={`reveal-break-points__break reveal-break-points__break${breakPoint.name}`}\n        >\n          <div className=\"reveal-break-points__break__label-box\">\n            <div className=\"reveal-break-points__break__label\">\n              {breakPoint.maxWidth}px\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default RevealBreakPoints\n","import \"./colors-page.css\"\nimport React from \"react\"\nimport Layout from \"../components/layout\"\nimport StyleHx from \"../components/style-hx\"\nimport ExampleGroup from \"../components/example-group\"\nimport ExampleLabel from \"../components/example-label\"\nimport StyleP from \"../components/style-p\"\nimport { VDimension } from \"../components/dimensions\"\nimport ExampleSearchInput from \"../components/example-search-input\"\nimport { getCssVariable } from \"../utils/get-css-variable\"\n\nconst ColorsPage = () => {\n  const renderSwatch = colorName => {\n    const colorVarName = `--${colorName}`\n    const colorValue = getCssVariable(colorVarName)\n\n    return (\n      <div className=\"page__colors__color-info\">\n        <div\n          className=\"page__colors__color-swatch\"\n          style={{ background: colorValue }}\n        ></div>\n        {colorValue}\n      </div>\n    )\n  }\n\n  const primaryColors = [\n    \"prereview-red\",\n    \"prereview-black\",\n    \"prereview-white\",\n    \"prereview-grey\",\n  ]\n  const secondaryColors = [\n    \"prereview-blue\",\n    \"prereview-light-blue\",\n    \"prereview-gold\",\n    \"prereview-light-gold\",\n    \"prereview-coral\",\n    \"prereview-spring-green\",\n    \"prereview-xxxlight-grey\",\n    \"prereview-xxlight-grey\",\n    \"prereview-xlight-grey\",\n    \"prereview-light-grey\",\n  ]\n  return (\n    <Layout>\n      <article className=\"page page--colors\">\n        <header className=\"page__colors\">\n          <StyleHx level={1}>PREreview Colors</StyleHx>\n        </header>\n\n        <section>\n          <StyleP variantName=\"large\">\n            The PREreview color system is composed of primary and secondary\n            palette. The secondary colors are intended to be used in\n            illustrations and in select cases where the primary color range is\n            not sufficient for clear communication.{\" \"}\n          </StyleP>\n\n          <ExampleGroup>\n            <ExampleLabel\n              title=\"Primary Colors\"\n              subtitle=\"These should be the primary colours used in PREReview website, digital, and print materials.\"\n            />\n            <StyleP></StyleP>\n            <div className=\"page__colors__swatches\">\n              {primaryColors.map(color => renderSwatch(color))}\n            </div>\n          </ExampleGroup>\n          <ExampleGroup>\n            <ExampleLabel\n              title=\"Secondary Colors\"\n              subtitle=\"To maintain a unified visual identity across supporting visuals, these colours should be\nused in illustrations that appear in PREReview website, digital, and print materials.\"\n            />\n            <StyleP></StyleP>\n            <div className=\"page__colors__swatches\">\n              {secondaryColors.map(color => renderSwatch(color))}\n            </div>\n          </ExampleGroup>\n\n          <ExampleGroup>\n            <StyleP variantName=\"large\">\n              Text color should be optimized for legibility and accessibility.\n            </StyleP>\n            <br />\n            <ExampleLabel\n              title=\"Primary Text Color\"\n              subtitle={`Unrich Black: ${getCssVariable(\"--unrich-black\")}`}\n            />\n            <StyleP>\n              Black text set on white should use <em>unrich</em> black - a\n              slightly desaturated black that is easier to read.\n            </StyleP>\n            <br />\n            <ExampleLabel\n              title=\"Secondary Text Color\"\n              subtitle={`Grey: ${getCssVariable(\"--basic-font-color--light\")}`}\n            />\n            <StyleP className=\"page__colors__light-text\">\n              Light text set on white should use a grey that is dark enough to\n              meet accessibility standards.\n            </StyleP>\n          </ExampleGroup>\n          <ExampleGroup>\n            <ExampleLabel\n              title=\"Calls to Action and Featured Text\"\n              subtitle={`White text with ${getCssVariable(\n                \"--prerview-red-text-shadow\"\n              )} shadow on Red ${getCssVariable(\"--prereview-red\")}`}\n            />\n            <div className=\"page_colors__cta-example\">\n              <StyleHx level={1}>Splash Page Text</StyleHx>\n            </div>\n            <StyleP>\n              Note that the PREreview brand color combination of white on\n              #ff3333 red does not meet the WCAG accessability standard for\n              color contrast. In this case, a text shadow may be employed to\n              achieve a higher effective contrast between the text and\n              background.\n              <blockquote>\n                ...if a letter is lighter at the top than it is a the bottom, it\n                may be difficult to maintain the contrast ratio between the\n                letter and the background over the full letter. In this case,\n                the designer might darken the background behind the letter, or\n                add a thin black outline (at least one pixel wide) around the\n                letter in order to keep the contrast ratio between the letter\n                and the background above 4.5:1. – \n                <a href=\"https://www.w3.org/WAI/WCAG20/quickref/20140916/#visual-audio-contrast-contrast\">\n                  w3.org\n                </a>\n              </blockquote>\n            </StyleP>\n          </ExampleGroup>\n        </section>\n      </article>\n    </Layout>\n  )\n}\n\nexport default ColorsPage\n","import React, { useState, useEffect } from \"react\"\nimport { useRect } from \"@reach/rect\"\n\nexport const breakPoints = [\n  { minWidth: 0, maxWidth: 420, name: \"--mobile\" },\n  { minWidth: 0, maxWidth: 640, name: \"--small-tablet\" },\n  { minWidth: 0, maxWidth: 768, name: \"--tablet\" },\n  { minWidth: 0, maxWidth: 1024, name: \"--small-desktop\" },\n  { minWidth: 0, maxWidth: 1280, name: \"--large-desktop\" },\n  { minWidth: 0, maxWidth: 1824, name: \"--xlarge-desktop\" },\n  { minWidth: 0, maxWidth: 2560, name: \"--xxlarge-desktop\" },\n]\n\nexport const useBreakPoints = (ref, baseClass = \"break-point\") => {\n  //console.log(\"useBreakPoints\", ref)\n\n  const [activeBreakPoints, setActiveBreakPoints] = useState([])\n\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  useEffect(() => {\n    if (ref.current) {\n      setIsLoaded(true)\n    }\n  })\n\n  const rect = useRect(ref, true, rect => {\n    const matchingBreakPoints = breakPoints.filter(breakPoint => {\n      return (\n        rect.width >= breakPoint.minWidth && rect.width <= breakPoint.maxWidth\n      )\n    })\n    const names = matchingBreakPoints.map(\n      matchingBreakPoint => `${baseClass}${matchingBreakPoint.name}`\n    )\n    //console.log(\"change\", classString)\n    setActiveBreakPoints(matchingBreakPoints)\n  })\n\n  return activeBreakPoints\n}\n\nexport const getBreakPointClasses = (activeBreakPoints, baseClass = \"\") => {\n  const names = activeBreakPoints.map(\n    activeBreakPoint => `${baseClass}${activeBreakPoint.name}`\n  )\n  return names.join(\" \")\n  //console.log(\"change\", classString)\n}\n"],"sourceRoot":""}