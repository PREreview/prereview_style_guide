{"version":3,"sources":["webpack:///./src/components/style-display-text.js","webpack:///./src/pages/typography.js","webpack:///./src/components/example-text-block.js"],"names":["StyleDisplayText","children","className","Typography","LoremIpsum","wordsPerSentence","max","min","sentencesPerParagraph","level","variantName","ExampleTextBlock","styleName","fontMetrics","getCssFontMetrics","console","log","fontSize","size","lineHeight","unit","topMargin","bottomMargin"],"mappings":"4FAAA,mCAOeA,IAJU,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvB,uBAAGC,UAAU,sBAAsBD,K,kCCJrC,8IAoEeE,UAvDI,WACM,IAAIC,aAAW,CACpCC,iBAAkB,CAChBC,IAAK,EACLC,IAAK,KAIa,IAAIH,aAAW,CACnCI,sBAAuB,CACrBF,IAAK,GACLC,IAAK,KAIkB,IAAIH,aAAW,CACxCI,sBAAuB,CACrBF,IAAK,EACLC,IAAK,KAIT,OACE,kBAAC,IAAD,KACE,6BAASL,UAAU,sBACjB,4BAAQA,UAAU,gBAChB,kBAAC,IAAD,CAASO,MAAO,GAAhB,iCAGF,iCACE,kBAAC,IAAD,CAAQC,YAAY,SAApB,ub,kCC3CV,6DA6BeC,IAtBU,SAAC,GAKnB,IAJLC,EAII,EAJJA,UACAF,EAGI,EAHJA,YAEAT,GACI,EAFJC,UAEI,EADJD,UAEMY,EAAcC,YAAkBF,EAAWF,GAGjD,OADAK,QAAQC,IAAI,cAAeJ,EAAWC,GAEpC,kBAAC,IAAD,CACEI,SAAUJ,EAAYK,KACtBC,WAAYN,EAAYM,WACxBC,KAAMP,EAAYO,KAClBC,UAAWR,EAAYQ,UACvBC,aAAcT,EAAYS,cAEzBrB","file":"component---src-pages-typography-js-01bda84bbccdd91fc809.js","sourcesContent":["import \"./style-display-text.css\"\nimport React from \"react\"\n\nconst StyleDisplayText = ({ children }) => (\n  <p className=\"style-display-text\">{children}</p>\n)\n\nexport default StyleDisplayText\n","import React from \"react\"\nimport { LoremIpsum } from \"lorem-ipsum\"\n\nimport Layout from \"../components/layout\"\nimport StyleHx from \"../components/style-hx\"\nimport ExampleRow from \"../components/example-row\"\nimport ExampleLabel from \"../components/example-label\"\nimport ExampleHx from \"../components/example-hx\"\nimport ExampleTextBlock from \"../components/example-text-block\"\nimport RevealBoxWhiteSpace from \"../components/reveal-box-white-space\"\nimport StyleP from \"../components/style-p\"\nimport StyleDisplayText from \"../components/style-display-text\"\n\nconst Typography = () => {\n  const titleGenerator = new LoremIpsum({\n    wordsPerSentence: {\n      max: 8,\n      min: 4,\n    },\n  })\n\n  const textGenerator = new LoremIpsum({\n    sentencesPerParagraph: {\n      max: 12,\n      min: 6,\n    },\n  })\n\n  const shortTextGenerator = new LoremIpsum({\n    sentencesPerParagraph: {\n      max: 8,\n      min: 4,\n    },\n  })\n\n  return (\n    <Layout>\n      <article className=\"page page--headers\">\n        <header className=\"page__header\">\n          <StyleHx level={1}>PREreview Typographic Styles</StyleHx>\n        </header>\n\n        <section>\n          <StyleP variantName=\"large\">\n            PREreview uses the open source font \"Open Sans\" as its primary brand\n            type treatment. Open Sans is a sans-serif font with a wide range of\n            weights and a large charcter set. It features simple forms that work\n            well at large display sizes. However, care must be taken when\n            applied to bodies of text – in such situations it is recommended to\n            use a relatively large line-spacing that allows for easier\n            eye-tracking accross lines of text.\n          </StyleP>\n          {/* <ExampleRow>\n            <ExampleLabel\n              title=\"Heading 1\"\n              subtitle=\"Open Sans 600, 24pt / 32pt\"\n            />\n\n            <ExampleHx level={1} styleName=\"header-1\">\n              {titleGenerator.generateSentences(1)}\n            </ExampleHx>\n          </ExampleRow> */}\n        </section>\n      </article>\n    </Layout>\n  )\n}\n\nexport default Typography\n","import React from \"react\"\nimport { getCssVariable, getCssFontMetrics } from \"../utils/get-css-variable\"\nimport StyleHx from \"./style-hx\"\nimport RevealTypeWhiteSpace from \"./reveal-type-white-space\"\n\n/* the semantic level and visual size can be set independantly */\n\nconst ExampleTextBlock = ({\n  styleName,\n  variantName,\n  className = \"\",\n  children,\n}) => {\n  const fontMetrics = getCssFontMetrics(styleName, variantName)\n\n  console.log(\"fontMetrics\", styleName, fontMetrics)\n  return (\n    <RevealTypeWhiteSpace\n      fontSize={fontMetrics.size}\n      lineHeight={fontMetrics.lineHeight}\n      unit={fontMetrics.unit}\n      topMargin={fontMetrics.topMargin}\n      bottomMargin={fontMetrics.bottomMargin}\n    >\n      {children}\n    </RevealTypeWhiteSpace>\n  )\n}\n\nexport default ExampleTextBlock\n"],"sourceRoot":""}