{"version":3,"sources":["webpack:///./src/components/example-group.js","webpack:///./node_modules/classnames/index.js","webpack:///./src/components/example-text-block.js","webpack:///./src/components/button.js","webpack:///./src/pages/buttons-page.js"],"names":["ExampleGroup","children","className","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","ExampleTextBlock","styleName","variantName","fontMetrics","getCssFontMetrics","console","log","fontSize","size","lineHeight","unit","topMargin","bottomMargin","Button","pill","primary","onMouseUp","element","isWaiting","isFocused","buttonProps","El","e","currentTarget","blur","ButtonsPage","level","title","subtitle","disabled","defaultReveal"],"mappings":"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","file":"component---src-pages-buttons-page-js-5020185b69ccf58d4982.js","sourcesContent":["import \"./example-group.css\"\nimport React from \"react\"\n\nconst ExampleGroup = ({ children }) => {\n  return <div className=\"example-group\">{children}</div>\n}\n\nexport default ExampleGroup\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React from \"react\"\nimport { getCssVariable, getCssFontMetrics } from \"../utils/get-css-variable\"\nimport StyleHx from \"./style-hx\"\nimport RevealTypeWhiteSpace from \"./reveal-type-white-space\"\n\n/* the semantic level and visual size can be set independantly */\n\nconst ExampleTextBlock = ({\n  styleName,\n  variantName,\n  className = \"\",\n  children,\n}) => {\n  const fontMetrics = getCssFontMetrics(styleName, variantName)\n\n  console.log(\"fontMetrics\", styleName, fontMetrics)\n  return (\n    <RevealTypeWhiteSpace\n      fontSize={fontMetrics.size}\n      lineHeight={fontMetrics.lineHeight}\n      unit={fontMetrics.unit}\n      topMargin={fontMetrics.topMargin}\n      bottomMargin={fontMetrics.bottomMargin}\n    >\n      {children}\n    </RevealTypeWhiteSpace>\n  )\n}\n\nexport default ExampleTextBlock\n","import \"./button.css\"\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\n\nexport default function Button({\n  children,\n  className = \"\",\n  pill = false,\n  primary = false,\n  onMouseUp = () => {},\n  element = \"button\",\n  isWaiting = false,\n  isFocused = false,\n  ...buttonProps\n}) {\n  const El = element\n  return (\n    <El\n      className={classNames(\"button\", className, {\n        \"button--pill\": pill,\n        \"button--primary\": primary,\n        \"button--waiting\": isWaiting,\n        \"button--focused\": isFocused,\n      })}\n      {...buttonProps}\n      onMouseUp={e => {\n        /* having a focus style forces button to catch a sticky focus appearance.\n           Blur onMouseUp to release that focus appearance for mouse click only. */\n        e.currentTarget.blur()\n        onMouseUp(e)\n      }}\n    >\n      <span className=\"button__contents\">\n        {children}\n        <div className=\"button__heartbeat\" />\n      </span>\n    </El>\n  )\n}\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  pill: PropTypes.bool,\n  primary: PropTypes.bool,\n  onMouseUp: PropTypes.func,\n  element: PropTypes.string,\n  isWaiting: PropTypes.bool,\n}\n","import \"./buttons-page.css\"\nimport \"../components/button.css\"\nimport React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport { LoremIpsum } from \"lorem-ipsum\"\nimport resolvePath from \"../utils/resolve-path\"\nimport Layout from \"../components/layout\"\nimport StyleHx from \"../components/style-hx\"\nimport ExampleRow from \"../components/example-row\"\nimport ExampleGroup from \"../components/example-group\"\nimport ExampleLabel from \"../components/example-label\"\nimport ExampleHx from \"../components/example-hx\"\nimport ExampleTextBlock from \"../components/example-text-block\"\nimport RevealBoxWhiteSpace from \"../components/reveal-box-white-space\"\nimport StyleP from \"../components/style-p\"\nimport { VDimension } from \"../components/dimensions\"\nimport Button from \"../components/button\"\n\nconst ButtonsPage = () => {\n  return (\n    <Layout>\n      <article className=\"page page--headers\">\n        <header className=\"page__header\">\n          <StyleHx level={1}>UI Elements</StyleHx>\n        </header>\n\n        <section>\n          <StyleP variantName=\"large\"></StyleP>\n\n          <ExampleGroup>\n            <ExampleRow>\n              <ExampleLabel\n                title=\"Standard Button\"\n                subtitle=\"For Non-Primary Actions\"\n              />\n              <div>\n                <div className=\"buttons-page__button-row\">\n                  <div className=\"buttons-page__button-example\">\n                    <Button disabled={true}>Disabled</Button>\n                  </div>\n                  <div className=\"buttons-page__button-example\">\n                    <Button>Enabled</Button>\n                  </div>\n                  <div className=\"buttons-page__button-example\">\n                    <Button isFocused={true}>Focused</Button>\n                  </div>\n                </div>\n              </div>\n            </ExampleRow>\n          </ExampleGroup>\n          <ExampleGroup>\n            <ExampleRow>\n              <ExampleLabel\n                title=\"Primary Button\"\n                subtitle=\"For Primary Actions\"\n              />\n              <div className=\"buttons-page__button-row\">\n                <div className=\"buttons-page__button-example\">\n                  <Button primary={true} disabled={true}>\n                    Disabled\n                  </Button>\n                </div>\n                <div className=\"buttons-page__button-example\">\n                  <Button primary={true}>Enabled</Button>\n                </div>\n                <div className=\"buttons-page__button-example\">\n                  <Button primary={true} isFocused={true}>\n                    Focused\n                  </Button>\n                </div>\n              </div>\n            </ExampleRow>\n          </ExampleGroup>\n          <ExampleGroup>\n            <ExampleRow>\n              <ExampleLabel\n                title=\"Action Button\"\n                subtitle=\"For Calls To Action \"\n              />\n              <div className=\"buttons-page__button-row\">\n                <div className=\"buttons-page__button-example\">\n                  <Button pill={true} primary={true} disabled={true}>\n                    Disabled\n                  </Button>\n                </div>\n                <div className=\"buttons-page__button-example\">\n                  <Button pill={true} primary={true}>\n                    Enabled\n                  </Button>\n                </div>\n                <div className=\"buttons-page__button-example\">\n                  <Button pill={true} primary={true} isFocused={true}>\n                    Focused\n                  </Button>\n                </div>\n              </div>\n            </ExampleRow>\n          </ExampleGroup>\n          <ExampleGroup>\n            <ExampleRow>\n              <ExampleLabel title=\"Button Construction\" subtitle=\"\" />\n              <div className=\"buttons-page__button-row\">\n                <div className=\"buttons-page__button-example\">\n                  <VDimension size={32} unit=\"px\" />\n                  <div className=\"button\">\n                    <RevealBoxWhiteSpace defaultReveal={true}>\n                      <div className=\"button__contents\">Layout</div>\n                    </RevealBoxWhiteSpace>\n                  </div>\n                </div>\n                <div className=\"buttons-page__button-example\">\n                  <div className=\"button button--primary\">\n                    <RevealBoxWhiteSpace defaultReveal={true}>\n                      <div className=\"button__contents\">Layout</div>\n                    </RevealBoxWhiteSpace>\n                  </div>\n                </div>\n                <div className=\"buttons-page__button-example\">\n                  <div className=\"button button--primary button--pill\">\n                    <RevealBoxWhiteSpace defaultReveal={true}>\n                      <div className=\"button__contents\">Layout</div>\n                    </RevealBoxWhiteSpace>\n                  </div>\n                </div>\n              </div>\n            </ExampleRow>\n          </ExampleGroup>\n        </section>\n      </article>\n    </Layout>\n  )\n}\n\nexport default ButtonsPage\n"],"sourceRoot":""}