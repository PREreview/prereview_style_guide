{"version":3,"sources":["webpack:///./src/components/example-group.js","webpack:///./src/pages/white-space.js","webpack:///./src/components/dimensions.js","webpack:///./src/components/reveal-box-white-space.js","webpack:///./src/components/style-p.js"],"names":["ExampleGroup","children","className","WhiteSpace","level","title","subtitle","margin","padding","unit","HDimension","size","VDimension","RevealBoxWhiteSpace","defaultReveal","leftMargin","rightMargin","topMargin","bottomMargin","length","leftPadding","rightPadding","topPadding","bottomPadding","useState","isRevealing","setIsRevealing","style","paddingLeft","paddingRight","paddingBottom","paddingTop","onClick","height","width","StyleP","variantName"],"mappings":"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","file":"component---src-pages-white-space-js-96239f09459dec50fe23.js","sourcesContent":["import \"./example-group.css\"\nimport React from \"react\"\n\nconst ExampleGroup = ({ children }) => {\n  return <div className=\"example-group\">{children}</div>\n}\n\nexport default ExampleGroup\n","import \"./white-space.css\"\nimport React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport StyleHx from \"../components/style-hx\"\nimport StyleP from \"../components/style-p\"\nimport ExampleGroup from \"../components/example-group\"\nimport ExampleRow from \"../components/example-row\"\nimport ExampleLabel from \"../components/example-label\"\nimport RevealBoxWhiteSpace from \"../components/reveal-box-white-space\"\nconst WhiteSpace = () => {\n  return (\n    <Layout>\n      <article className=\"page page--white-space\">\n        <header className=\"page__header\">\n          <StyleHx level={1}>White Space</StyleHx>\n          <div className=\"white-space\">\n            <ExampleGroup>\n              <ExampleRow>\n                <ExampleLabel\n                  title=\"Column Gutters\"\n                  subtitle=\"2 x line-height\"\n                />\n                <div className=\"white-space__two-col\">\n                  <RevealBoxWhiteSpace\n                    margin={[0, 18, 0, 0]}\n                    padding={[0]}\n                    unit=\"pt\"\n                  >\n                    <StyleP>\n                      Blocks of information may be visually seperated using\n                      generous amounts of white space.\n                    </StyleP>\n                  </RevealBoxWhiteSpace>\n                  <RevealBoxWhiteSpace\n                    margin={[0, 0, 0, 18]}\n                    padding={[0]}\n                    unit=\"pt\"\n                  >\n                    <StyleP>\n                      The space between text columns should be atleast two times\n                      the line-height. In this example the center gutter is 2 x\n                      18pt.\n                    </StyleP>\n                  </RevealBoxWhiteSpace>\n                </div>\n              </ExampleRow>\n            </ExampleGroup>\n          </div>\n        </header>\n      </article>\n    </Layout>\n  )\n}\nexport default WhiteSpace\n","import \"./dimensions.css\"\nimport React from \"react\"\n\nconst HDimension = ({ size, unit }) => {\n  return (\n    <div className=\"h-dimension\" title={`${size}${unit}`}>\n      <div className=\"h-dimension__size\">{`${size}${unit}`}</div>\n      <div className=\"h-dimension__line\">\n        <div className=\"h-dimension__left-end\" />\n        <div className=\"h-dimension__left-line\" />\n        <div className=\"h-dimension__right-line\" />\n        <div className=\"h-dimension__right-end\" />\n      </div>\n    </div>\n  )\n}\n\nconst VDimension = ({ size, unit }) => {\n  return (\n    <div className=\"v-dimension\" title={`${size}${unit}`}>\n      <div className=\"v-dimension__line\">\n        <div className=\"v-dimension__top-end\" />\n        <div className=\"v-dimension__top-line\" />\n        <div className=\"v-dimension__size\">{`${size}${unit}`}</div>\n        <div className=\"v-dimension__bottom-line\" />\n        <div className=\"v-dimension__bottom-end\" />\n      </div>\n    </div>\n  )\n}\n\nexport { HDimension, VDimension }\n","import \"./reveal-box-white-space.css\"\nimport React, { useState } from \"react\"\nimport IconButton from \"./icon-button\"\nimport { IoMdEyeOff, IoMdEye } from \"react-icons/io\"\nimport { HDimension, VDimension } from \"./dimensions\"\n\nconst RevealBoxWhiteSpace = ({\n  padding,\n  margin,\n  unit = \"px\",\n  children,\n  defaultReveal = false,\n}) => {\n  let leftMargin = 0,\n    rightMargin = 0,\n    topMargin = 0,\n    bottomMargin = 0\n\n  if (margin.length === 1) {\n    leftMargin = rightMargin = topMargin = bottomMargin = margin[0]\n  } else if (margin.length === 2) {\n    topMargin = bottomMargin = margin[0]\n    leftMargin = rightMargin = margin[1]\n  } else if (margin.length === 4) {\n    ;[topMargin, rightMargin, bottomMargin, leftMargin] = margin\n  }\n\n  let leftPadding = 0,\n    rightPadding = 0,\n    topPadding = 0,\n    bottomPadding = 0\n\n  if (padding.length === 1) {\n    leftPadding = rightPadding = topPadding = bottomPadding = padding[0]\n  } else if (padding.length === 2) {\n    topPadding = bottomPadding = padding[0]\n    leftPadding = rightPadding = padding[1]\n  } else if (padding.length === 4) {\n    ;[topPadding, rightPadding, bottomPadding, leftPadding] = padding\n  }\n\n  const [isRevealing, setIsRevealing] = useState(defaultReveal)\n\n  return (\n    <div\n      className={`reveal-box-white-space ${\n        isRevealing\n          ? \"reveal-box-white-space--active\"\n          : \"reveal-box-white-space--inactive\"\n      }`}\n      style={{\n        paddingLeft: `${leftMargin}${unit}`,\n        paddingRight: `${rightMargin}${unit}`,\n        paddingBottom: `${bottomMargin}${unit}`,\n        paddingTop: `${topMargin}${unit}`,\n      }}\n      onClick={() => setIsRevealing(!isRevealing)}\n    >\n      <div className=\"reveal-box-white-space__button\">\n        <IconButton\n          onClick={() => setIsRevealing(!isRevealing)}\n          className=\"reveal-box-white-space__icon-button\"\n        >\n          <IoMdEye className=\"reveal-box-white-space__button__icon\" />\n        </IconButton>\n      </div>\n\n      <div\n        className=\"reveal-box-white-space__top-margin\"\n        style={{ height: `${topMargin}${unit}` }}\n      >\n        {topMargin > 0 && <VDimension size={topMargin} unit={unit} />}\n      </div>\n      <div\n        className=\"reveal-box-white-space__bottom-margin\"\n        style={{ height: `${bottomMargin}${unit}` }}\n      >\n        {bottomMargin > 0 && <VDimension size={bottomMargin} unit={unit} />}\n      </div>\n      <div\n        className=\"reveal-box-white-space__left-margin\"\n        style={{ width: `${leftMargin}${unit}` }}\n      >\n        {leftMargin > 0 && <HDimension size={leftMargin} unit={unit} />}\n      </div>\n      <div\n        className=\"reveal-box-white-space__right-margin\"\n        style={{ width: `${rightMargin}${unit}` }}\n      >\n        {rightMargin > 0 && <HDimension size={rightMargin} unit={unit} />}\n      </div>\n      <div\n        className=\"reveal-box-white-space__spacer\"\n        style={{\n          paddingLeft: leftPadding,\n          paddingRight: rightPadding,\n          paddingTop: topPadding,\n          paddingBottom: bottomPadding,\n        }}\n      >\n        <div\n          className=\"reveal-box-white-space__top-padding\"\n          style={{ height: `${topPadding}${unit}` }}\n        />\n        <div\n          className=\"reveal-box-white-space__bottom-padding\"\n          style={{ height: `${bottomPadding}${unit}` }}\n        />\n        <div\n          className=\"reveal-box-white-space__left-padding\"\n          style={{ width: `${leftPadding}${unit}` }}\n        />\n        <div\n          className=\"reveal-box-white-space__right-padding\"\n          style={{ width: `${rightPadding}${unit}` }}\n        />\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default RevealBoxWhiteSpace\n","import \"./style-p.css\"\nimport React from \"react\"\n\nconst StyleP = ({ variantName, className = \"\", children }) => {\n  return (\n    <p\n      className={`style-p ${\n        variantName ? \"style-p--\" + variantName : \"\"\n      } ${className}`}\n    >\n      {children}\n    </p>\n  )\n}\n\nexport default StyleP\n"],"sourceRoot":""}