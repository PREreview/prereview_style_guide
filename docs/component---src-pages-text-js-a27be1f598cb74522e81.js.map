{"version":3,"sources":["webpack:///./src/components/reveal-type-white-space.js","webpack:///./src/utils/get-css-variable.js","webpack:///./src/utils/get-css-white-space.js","webpack:///./src/components/dimensions.js","webpack:///./src/components/reveal-box-white-space.js","webpack:///./src/components/style-p.js","webpack:///./src/components/example-hx.js","webpack:///./src/components/example-text-block.js","webpack:///./src/pages/text.js"],"names":["RevealTypeWhiteSpace","children","lineHeight","fontSize","topMargin","bottomMargin","unit","defaultReveal","useState","isRevealing","setIsRevealing","className","onClick","style","height","top","width","position","rows","i","push","key","getBackground","bottom","getCssVariable","varName","window","getComputedStyle","document","body","getPropertyValue","getCssFontMetrics","styleName","variantName","size","sizeStyle","lineHeightStyle","postfix","fontSizeStyle","topMarginStyle","bottomMarginStyle","cssUnits","parse","lineHeightNum","convert","topMarginNum","bottomMarginNum","value","getCssWhiteSpace","el","margin","marginTop","topUnit","marginBottom","bottomUnit","left","marginLeft","leftUnit","right","marginRight","rightUnit","padding","paddingTop","paddingBottom","paddingLeft","paddingRight","console","log","HDimension","title","VDimension","RevealBoxWhiteSpace","setTopMargin","topMarginUnit","setTopMarginUnit","rightMargin","setRightMargin","rightMarginUnit","setRightMarginUnit","setBottomMargin","bottomMarginUnit","setBottomMarginUnit","leftMargin","setLeftMargin","leftMarginUnit","setLeftMarginUnit","topPadding","setTopPadding","topPaddingUnit","setTopPaddingUnit","rightPadding","setRightPadding","rightPaddingUnit","setRightPaddingUnit","bottomPadding","setBottomPadding","bottomPaddingUnit","setBottomPaddingUnit","leftPadding","setLeftPadding","leftPaddingUnit","setLeftPaddingUnit","childRef","React","useRef","clonedChild","cloneElement","Children","only","ref","useEffect","current","undefined","metrics","length","StyleP","forwardRef","ExampleHx","level","fontMetrics","ExampleTextBlock","Text","titleGenerator","LoremIpsum","wordsPerSentence","max","min","textGenerator","sentencesPerParagraph","shortTextGenerator","subtitle","generateSentences","generateParagraphs"],"mappings":"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","file":"component---src-pages-text-js-a27be1f598cb74522e81.js","sourcesContent":["import \"./reveal-type-white-space.css\"\nimport React, { useState } from \"react\"\nimport { IoMdEyeOff, IoMdEye } from \"react-icons/io\"\nimport IconButton from \"./icon-button\"\n\nconst RevealTypeWhiteSpace = ({\n  children,\n  lineHeight = 20,\n  fontSize = 10,\n  topMargin = 0,\n  bottomMargin = 0,\n  unit = \"pt\",\n  defaultReveal = false,\n}) => {\n  const getBackground = () => {\n    let rows = []\n    for (let i = 0; i < 20; i++) {\n      rows.push(\n        <div\n          key={i}\n          className=\"reveal-type-white-space__bg-row\"\n          style={{ height: `${lineHeight}${unit}`, position: \"relative\" }}\n        >\n          <div\n            className=\"reveal-type-white-space__bg-row__text-height\"\n            style={{\n              height: `${fontSize}${unit}`,\n              position: \"relative\",\n              top: `${(lineHeight - fontSize) / 2}${unit}`,\n              fontSize: `8pt`,\n              lineHeight: `${fontSize}${unit}`,\n            }}\n          >\n            {i === 0 && (\n              <div\n                className=\"reveal-type-white-space__bg-row__text-height-label\"\n                style={{ height: `${fontSize}${unit}` }}\n              >\n                {`${fontSize}${unit}`}\n              </div>\n            )}\n          </div>\n          <div className=\"reveal-type-white-space__bg-row__right-margin\" />\n        </div>\n      )\n    }\n    return rows\n  }\n\n  const [isRevealing, setIsRevealing] = useState(defaultReveal)\n\n  return (\n    <div\n      className={`reveal-type-white-space ${\n        isRevealing\n          ? \"reveal-type-white-space--active\"\n          : \"reveal-type-white-space--inactive\"\n      }`}\n    >\n      <div className=\"reveal-type-white-space__button\">\n        <IconButton\n          onClick={() => setIsRevealing(!isRevealing)}\n          className=\"reveal-type-white-space__icon-button\"\n        >\n          <IoMdEye className=\"reveal-type-white-space__button__icon\" />\n        </IconButton>\n      </div>\n\n      <div\n        className=\"reveal-type-white-space__type\"\n        onClick={() => setIsRevealing(!isRevealing)}\n      >\n        {children}\n\n        <div className=\"reveal-type-white-space__leading\">\n          <div\n            className=\"reveal-type-white-space__top-margin\"\n            style={{\n              height: `${topMargin}${unit}`,\n              top: `-${topMargin}${unit}`,\n              width: \"100%\",\n              position: \"absolute\",\n            }}\n          >\n            {topMargin > 0 && (\n              <span className=\"reveal-type-white-space__top-margin__label\">\n                {topMargin}\n                {unit}\n              </span>\n            )}\n          </div>\n          <div className=\"reveal-type-white-space__lines\">\n            {getBackground()}\n          </div>\n\n          <div\n            className=\"reveal-type-white-space__bottom-margin\"\n            style={{\n              height: `${bottomMargin}${unit}`,\n              width: \"100%\",\n              position: \"absolute\",\n              bottom: `-${bottomMargin}${unit}`,\n            }}\n          >\n            {bottomMargin > 0 && (\n              <span className=\"reveal-type-white-space__bottom-margin__label\">\n                {bottomMargin}\n                {unit}\n              </span>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RevealTypeWhiteSpace\n","import cssUnits from \"units-css\"\n\nconst getCssVariable = varName => {\n  // window.getComputedStyle is not available during SSR.\n  const style =\n    typeof window !== `undefined`\n      ? window.getComputedStyle(document.body).getPropertyValue(varName)\n      : \"\"\n  // console.log(\"getCssVariable\", varName, style)\n\n  return style\n  //return document.body.style.getPropertyValue(varName)\n}\n\nconst getCssFontMetrics = (styleName = \"none\", variantName) => {\n  if (typeof window === `undefined`) {\n    return {\n      size: 0,\n      sizeStyle: \"0px\",\n      lineHeight: 0,\n      lineHeightStyle: \"0px\",\n      topMargin: 0,\n      bottomMargin: 0,\n      unit: \"px\",\n    }\n  }\n\n  const postfix = variantName ? `--${variantName}` : \"\"\n  const fontSizeStyle = getCssVariable(`--${styleName}-font-size${postfix}`)\n  const lineHeightStyle = getCssVariable(`--${styleName}-line-height${postfix}`)\n  const topMarginStyle = getCssVariable(`--${styleName}-top-margin${postfix}`)\n  const bottomMarginStyle = getCssVariable(\n    `--${styleName}-bottom-margin${postfix}`\n  )\n  // console.log(\n  //   \"getCssFontMetrics\",\n  //   `--${styleName}-font-size${postfix}`,\n  //   fontSizeStyle,\n  //   lineHeightStyle\n  // )\n\n  const size = cssUnits.parse(fontSizeStyle)\n\n  const lineHeight = cssUnits.parse(lineHeightStyle)\n  const lineHeightNum = cssUnits.convert(\n    size.unit,\n    lineHeightStyle,\n    document.body\n  )\n  const topMarginNum = cssUnits.convert(\n    size.unit,\n    topMarginStyle,\n    document.body\n  )\n  const bottomMarginNum = cssUnits.convert(\n    size.unit,\n    bottomMarginStyle,\n    document.body\n  )\n\n  return {\n    size: size.value,\n    sizeStyle: `${size.value}${size.unit}`,\n    lineHeight: lineHeightNum,\n    lineHeightStyle: `${lineHeightNum}${size.unit}`,\n    topMargin: topMarginNum,\n    bottomMargin: bottomMarginNum,\n    unit: size.unit,\n  }\n}\n\nexport { getCssVariable, getCssFontMetrics }\n","import cssUnits from \"units-css\"\n\nconst getCssWhiteSpace = el => {\n  if (typeof window === \"undefined\") {\n    return undefined\n  }\n\n  const style = window.getComputedStyle(el)\n  //console.log(\"style\", style);\n\n  const margin = {\n    top: cssUnits.parse(style.marginTop).value,\n    topUnit: cssUnits.parse(style.marginTop).unit,\n    bottom: cssUnits.parse(style.marginBottom).value,\n    bottomUnit: cssUnits.parse(style.marginBottom).unit,\n    left: cssUnits.parse(style.marginLeft).value,\n    leftUnit: cssUnits.parse(style.marginLeft).unit,\n    right: cssUnits.parse(style.marginRight).value,\n    rightUnit: cssUnits.parse(style.marginRight).unit,\n  }\n\n  const padding = {\n    top: cssUnits.parse(style.paddingTop).value,\n    topUnit: cssUnits.parse(style.paddingTop).unit,\n    bottom: cssUnits.parse(style.paddingBottom).value,\n    bottomUnit: cssUnits.parse(style.paddingBottom).unit,\n    left: cssUnits.parse(style.paddingLeft).value,\n    leftUnit: cssUnits.parse(style.paddingLeft).unit,\n    right: cssUnits.parse(style.paddingRight).value,\n    rightUnit: cssUnits.parse(style.paddingRight).unit,\n  }\n\n  console.log(\"margin\", margin)\n\n  return {\n    margin: margin,\n    padding: padding,\n  }\n}\n\nexport default getCssWhiteSpace\n","import \"./dimensions.css\"\nimport React from \"react\"\n\nconst HDimension = ({ size, unit }) => {\n  return (\n    <div className=\"h-dimension\" title={`${size}${unit}`}>\n      <div className=\"h-dimension__size\">{`${size}${unit}`}</div>\n      <div className=\"h-dimension__line\">\n        <div className=\"h-dimension__left-end\" />\n        <div className=\"h-dimension__left-line\" />\n        <div className=\"h-dimension__right-line\" />\n        <div className=\"h-dimension__right-end\" />\n      </div>\n    </div>\n  )\n}\n\nconst VDimension = ({ size, unit }) => {\n  return (\n    <div className=\"v-dimension\" title={`${size}${unit}`}>\n      <div className=\"v-dimension__line\">\n        <div className=\"v-dimension__top-end\" />\n        <div className=\"v-dimension__top-line\" />\n        <div className=\"v-dimension__size\">{`${size}${unit}`}</div>\n        <div className=\"v-dimension__bottom-line\" />\n        <div className=\"v-dimension__bottom-end\" />\n      </div>\n    </div>\n  )\n}\n\nexport { HDimension, VDimension }\n","import \"./reveal-box-white-space.css\"\nimport React, { useState, useEffect } from \"react\"\nimport IconButton from \"./icon-button\"\nimport getCssWhiteSpace from \"../utils/get-css-white-space\"\nimport { IoMdEyeOff, IoMdEye } from \"react-icons/io\"\nimport { HDimension, VDimension } from \"./dimensions\"\n\nconst RevealBoxWhiteSpace = ({\n  padding,\n  margin,\n  unit = \"px\",\n  children,\n  defaultReveal = false,\n  className = \"\",\n}) => {\n  const [isRevealing, setIsRevealing] = useState(defaultReveal)\n\n  const [topMargin, setTopMargin] = useState(0)\n  const [topMarginUnit, setTopMarginUnit] = useState(\"px\")\n  const [rightMargin, setRightMargin] = useState(0)\n  const [rightMarginUnit, setRightMarginUnit] = useState(\"px\")\n  const [bottomMargin, setBottomMargin] = useState(0)\n  const [bottomMarginUnit, setBottomMarginUnit] = useState(\"px\")\n  const [leftMargin, setLeftMargin] = useState(0)\n  const [leftMarginUnit, setLeftMarginUnit] = useState(\"px\")\n\n  const [topPadding, setTopPadding] = useState(0)\n  const [topPaddingUnit, setTopPaddingUnit] = useState(0)\n  const [rightPadding, setRightPadding] = useState(0)\n  const [rightPaddingUnit, setRightPaddingUnit] = useState(0)\n  const [bottomPadding, setBottomPadding] = useState(0)\n  const [bottomPaddingUnit, setBottomPaddingUnit] = useState(0)\n  const [leftPadding, setLeftPadding] = useState(0)\n  const [leftPaddingUnit, setLeftPaddingUnit] = useState(0)\n\n  const childRef = React.useRef()\n\n  const clonedChild = React.cloneElement(React.Children.only(children), {\n    ref: childRef,\n  })\n\n  useEffect(() => {\n    /* if margin and padding is undefined, we try to derive from child */\n\n    if (childRef.current && margin === undefined && padding === undefined) {\n      const metrics = getCssWhiteSpace(childRef.current)\n      setTopMargin(metrics.margin.top)\n      setTopMarginUnit(metrics.margin.topUnit)\n      setRightMargin(metrics.margin.right)\n      setRightMarginUnit(metrics.margin.rightUnit)\n      setBottomMargin(metrics.margin.bottom)\n      setBottomMarginUnit(metrics.margin.bottomUnit)\n      setLeftMargin(metrics.margin.left)\n      setLeftMarginUnit(metrics.margin.leftUnit)\n\n      setTopPadding(metrics.padding.top)\n      setTopPaddingUnit(metrics.padding.topUnit)\n      setRightPadding(metrics.padding.right)\n      setRightPaddingUnit(metrics.padding.rightUnit)\n      setBottomPadding(metrics.padding.bottom)\n      setBottomPaddingUnit(metrics.padding.bottomUnit)\n      setLeftPadding(metrics.padding.left)\n      setLeftPaddingUnit(metrics.padding.leftUnit)\n    } else {\n      setTopPaddingUnit(unit)\n      setRightPaddingUnit(unit)\n      setBottomPaddingUnit(unit)\n      setLeftPaddingUnit(unit)\n      if (margin.length === 1) {\n        setTopMargin(margin[0])\n        setRightMargin(margin[0])\n        setBottomMargin(margin[0])\n        setLeftMargin(margin[0])\n      } else if (margin.length === 2) {\n        setTopMargin(margin[0])\n        setBottomMargin(margin[0])\n        setRightMargin(margin[1])\n        setLeftMargin(margin[1])\n      } else if (margin.length === 4) {\n        setTopMargin(margin[0])\n        setRightMargin(margin[1])\n        setBottomMargin(margin[2])\n        setLeftMargin(margin[3])\n      }\n\n      if (padding.length === 1) {\n        setTopPadding(padding[0])\n        setRightPadding(padding[0])\n        setBottomPadding(padding[0])\n        setLeftPadding(padding[0])\n      } else if (padding.length === 2) {\n        setTopPadding(padding[0])\n        setBottomPadding(padding[0])\n        setRightPadding(padding[1])\n        setLeftPadding(padding[1])\n      } else if (padding.length === 4) {\n        setTopPadding(padding[0])\n        setRightPadding(padding[1])\n        setBottomPadding(padding[2])\n        setLeftPadding(padding[3])\n      }\n    }\n  })\n\n  return (\n    <div\n      className={`reveal-box-white-space ${\n        isRevealing\n          ? \"reveal-box-white-space--active\"\n          : \"reveal-box-white-space--inactive\"\n      } ${className}`}\n      // style={{\n      //   paddingLeft: `${leftMargin}${unit}`,\n      //   paddingRight: `${rightMargin}${unit}`,\n      //   paddingBottom: `${bottomMargin}${unit}`,\n      //   paddingTop: `${topMargin}${unit}`,\n      // }}\n      // onClick={() => setIsRevealing(!isRevealing)}\n    >\n      <div className=\"reveal-box-white-space__button\">\n        <IconButton\n          onClick={() => setIsRevealing(!isRevealing)}\n          className=\"reveal-box-white-space__icon-button\"\n        >\n          <IoMdEye className=\"reveal-box-white-space__button__icon\" />\n        </IconButton>\n      </div>\n      {clonedChild}\n      <div\n        className=\"reveal-box-white-space__top-margin\"\n        style={{ height: `${topMargin}${topMarginUnit}` }}\n      >\n        {topMargin > 0 && <VDimension size={topMargin} unit={topMarginUnit} />}\n      </div>\n      <div\n        className=\"reveal-box-white-space__bottom-margin\"\n        style={{ height: `${bottomMargin}${bottomMarginUnit}` }}\n      >\n        {bottomMargin > 0 && (\n          <VDimension size={bottomMargin} unit={bottomMarginUnit} />\n        )}\n      </div>\n      <div\n        className=\"reveal-box-white-space__left-margin\"\n        style={{ width: `${leftMargin}${leftMarginUnit}` }}\n      >\n        {leftMargin > 0 && (\n          <HDimension size={leftMargin} unit={leftMarginUnit} />\n        )}\n      </div>\n      <div\n        className=\"reveal-box-white-space__right-margin\"\n        style={{ width: `${rightMargin}${rightMarginUnit}` }}\n      >\n        {rightMargin > 0 && (\n          <HDimension size={rightMargin} unit={rightMarginUnit} />\n        )}\n      </div>\n      <div className=\"reveal-box-white-space__spacer\">\n        <div\n          className=\"reveal-box-white-space__top-padding\"\n          style={{\n            height: `${topPadding}${topPaddingUnit}`,\n            top: `${topMargin}${topMarginUnit}`,\n            left: `${leftMargin}${leftMarginUnit}`,\n            right: `${rightMargin}${rightMarginUnit}`,\n          }}\n        />\n        <div\n          className=\"reveal-box-white-space__bottom-padding\"\n          style={{\n            height: `${bottomPadding}${bottomPaddingUnit}`,\n            bottom: `${bottomMargin}${bottomMarginUnit}`,\n            left: `${leftMargin}${leftMarginUnit}`,\n            right: `${rightMargin}${rightMarginUnit}`,\n          }}\n        />\n        <div\n          className=\"reveal-box-white-space__left-padding\"\n          style={{\n            width: `${leftPadding}${leftPaddingUnit}`,\n            left: `${leftMargin}${leftMarginUnit}`,\n            top: `${topMargin}${topMarginUnit}`,\n            bottom: `${bottomMargin}${bottomMarginUnit}`,\n          }}\n        />\n        <div\n          className=\"reveal-box-white-space__right-padding\"\n          style={{\n            width: `${rightPadding}${rightPaddingUnit}`,\n            right: `${rightMargin}${rightMarginUnit}`,\n            top: `${topMargin}${topMarginUnit}`,\n            bottom: `${bottomMargin}${bottomMarginUnit}`,\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default RevealBoxWhiteSpace\n","import \"./style-p.css\"\nimport React from \"react\"\n\nconst StyleP = React.forwardRef(\n  ({ variantName, className = \"\", children }, ref) => {\n    return (\n      <p\n        ref={ref}\n        className={`style-p ${\n          variantName ? \"style-p--\" + variantName : \"\"\n        } ${className}`}\n      >\n        {children}\n      </p>\n    )\n  }\n)\n\nexport default StyleP\n","import React from \"react\"\nimport { getCssVariable, getCssFontMetrics } from \"../utils/get-css-variable\"\nimport StyleHx from \"./style-hx\"\nimport RevealTypeWhiteSpace from \"./reveal-type-white-space\"\n\n/* the semantic level and visual size can be set independantly */\n\nconst ExampleHx = ({\n  styleName,\n  variantName,\n  level = 1,\n  className = \"\",\n  children,\n}) => {\n  const fontMetrics = getCssFontMetrics(styleName)\n\n  console.log(\"fontMetrics\", styleName, fontMetrics)\n  return (\n    <RevealTypeWhiteSpace\n      fontSize={fontMetrics.size}\n      lineHeight={fontMetrics.lineHeight}\n      unit={fontMetrics.unit}\n      topMargin={fontMetrics.topMargin}\n      bottomMargin={fontMetrics.bottomMargin}\n    >\n      <StyleHx level={level}>{children}</StyleHx>\n    </RevealTypeWhiteSpace>\n  )\n}\n\nexport default ExampleHx\n","import React from \"react\"\nimport { getCssVariable, getCssFontMetrics } from \"../utils/get-css-variable\"\nimport StyleHx from \"./style-hx\"\nimport RevealTypeWhiteSpace from \"./reveal-type-white-space\"\n\n/* the semantic level and visual size can be set independantly */\n\nconst ExampleTextBlock = ({\n  styleName,\n  variantName,\n  className = \"\",\n  children,\n}) => {\n  const fontMetrics = getCssFontMetrics(styleName, variantName)\n\n  console.log(\"fontMetrics\", styleName, fontMetrics)\n  return (\n    <RevealTypeWhiteSpace\n      fontSize={fontMetrics.size}\n      lineHeight={fontMetrics.lineHeight}\n      unit={fontMetrics.unit}\n      topMargin={fontMetrics.topMargin}\n      bottomMargin={fontMetrics.bottomMargin}\n    >\n      {children}\n    </RevealTypeWhiteSpace>\n  )\n}\n\nexport default ExampleTextBlock\n","import React from \"react\"\nimport { LoremIpsum } from \"lorem-ipsum\"\n\nimport Layout from \"../components/layout\"\nimport StyleHx from \"../components/style-hx\"\nimport ExampleRow from \"../components/example-row\"\nimport ExampleLabel from \"../components/example-label\"\nimport ExampleHx from \"../components/example-hx\"\nimport ExampleTextBlock from \"../components/example-text-block\"\nimport RevealBoxWhiteSpace from \"../components/reveal-box-white-space\"\nimport StyleP from \"../components/style-p\"\nconst Text = () => {\n  const titleGenerator = new LoremIpsum({\n    wordsPerSentence: {\n      max: 8,\n      min: 4,\n    },\n  })\n\n  const textGenerator = new LoremIpsum({\n    sentencesPerParagraph: {\n      max: 12,\n      min: 6,\n    },\n  })\n\n  const shortTextGenerator = new LoremIpsum({\n    sentencesPerParagraph: {\n      max: 8,\n      min: 4,\n    },\n  })\n\n  return (\n    <Layout>\n      <article className=\"page page--headers\">\n        <header className=\"page__header\">\n          <StyleHx level={1}>Styling Bodies of text</StyleHx>\n        </header>\n\n        <section>\n          <ExampleRow>\n            <ExampleLabel\n              title=\"Heading 1\"\n              subtitle=\"Open Sans 600, 24pt / 32pt\"\n            />\n\n            <ExampleHx level={1} styleName=\"header-1\">\n              {titleGenerator.generateSentences(1)}\n            </ExampleHx>\n          </ExampleRow>\n          <ExampleRow>\n            <ExampleLabel\n              title=\"Lead Text\"\n              subtitle=\"Open Sans 500, 13pt / 22pt\"\n            />\n\n            <ExampleTextBlock styleName=\"basic\" variantName=\"large\">\n              <StyleP variantName=\"large\">\n                {shortTextGenerator.generateParagraphs(1)}\n              </StyleP>\n            </ExampleTextBlock>\n          </ExampleRow>\n          <ExampleRow>\n            <ExampleLabel\n              title=\"Body Text\"\n              subtitle=\"Open Sans 400, 11pt / 18pt\"\n            />\n            <div>\n              <ExampleTextBlock styleName=\"basic\">\n                <StyleP>{textGenerator.generateParagraphs(1)}</StyleP>\n              </ExampleTextBlock>\n              <ExampleTextBlock styleName=\"basic\">\n                <StyleP>{textGenerator.generateParagraphs(1)}</StyleP>\n              </ExampleTextBlock>\n            </div>\n          </ExampleRow>\n          <ExampleRow>\n            <ExampleLabel\n              title=\"Small Text\"\n              subtitle=\"Open Sans 400, 10pt / 15pt\"\n            />\n            <div>\n              <ExampleTextBlock styleName=\"basic\" variantName=\"small\">\n                <StyleP variantName=\"small\">\n                  {textGenerator.generateParagraphs(1)}\n                </StyleP>\n              </ExampleTextBlock>\n            </div>\n          </ExampleRow>\n        </section>\n      </article>\n    </Layout>\n  )\n}\n\nexport default Text\n"],"sourceRoot":""}